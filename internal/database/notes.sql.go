// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: notes.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getNotes = `-- name: GetNotes :many
SELECT name, content FROM notes
WHERE user_id = $1
`

type GetNotesRow struct {
	Name    string
	Content string
}

func (q *Queries) GetNotes(ctx context.Context, userID uuid.UUID) ([]GetNotesRow, error) {
	rows, err := q.db.QueryContext(ctx, getNotes, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetNotesRow
	for rows.Next() {
		var i GetNotesRow
		if err := rows.Scan(&i.Name, &i.Content); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
